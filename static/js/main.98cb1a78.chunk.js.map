{"version":3,"sources":["SearchComponent.js","WeatherComponent.js","App.js","reportWebVitals.js","index.js"],"names":["usestyles","makeStyles","theme","root","width","padding","marginLeft","marginRight","color","SearchComponent","error","search","handleTextChange","handleSubmit","classes","className","onSubmit","Grid","container","item","lg","sm","xs","TextField","style","label","value","onChange","helperText","paddingLeft","paddingTop","Button","variant","type","spacing","margin","textAlign","borderRadius","boxShadow","icon","backgroundColor","height","WeatherComponent","name","main","weather","description","temp","feels_like","temp_min","temp_max","iconUrl","ImageComponent","src","Math","floor","paddingRight","fontSize","toUpperCase","slice","defaultData","App","useState","data","setData","setSearch","query","setQuery","setError","useEffect","a","console","log","fetch","response","json","responseJson","ok","getWeather","Fragment","e","preventDefault","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98cb1a78.chunk.js","sourcesContent":["import React from 'react'\r\nimport { TextField, makeStyles, Button, Grid } from '@material-ui/core';\r\n\r\n\r\nconst usestyles = makeStyles(theme=> ({\r\nroot:{\r\n    \r\n    width:'650px',\r\n    padding: '0px 50px',\r\n    marginLeft:'auto',\r\n    marginRight:'auto',\r\n\r\n    \r\n    '& .MuiInputBase-input':{\r\n        color:'#ffffff',\r\n    },\r\n    '& .MuiButtonBase-root':{\r\n        color:'#ffffff',\r\n    }\r\n    \r\n}\r\n }))\r\n\r\nconst SearchComponent = ({ error=false,search,handleTextChange,handleSubmit }) => {\r\n    const classes = usestyles();\r\n    \r\n\r\n    return (\r\n \r\n        <form className={classes.root} onSubmit={handleSubmit} >\r\n\r\n            <Grid container>\r\n                <Grid item lg sm xs={12} >\r\n                    <TextField style={{width:'400px'}} \r\n                     label='City'\r\n                     value={search}\r\n                     onChange={handleTextChange}\r\n                     {...(error && {error:error,helperText:'Please Enter a Valid City Name'})}\r\n                     \r\n                      />\r\n\r\n                </Grid>\r\n                <Grid item lg sm xs={12} style={{paddingLeft:'100px', paddingTop:'1rem'}} >\r\n                <Button variant=\"outlined\" type='submit' >Get Weather</Button>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n            \r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SearchComponent\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core';\r\n//import { Icon } from '@material-ui/core';\r\nimport {Img} from 'react-image'\r\n\r\n\r\nconst usestyles = makeStyles(theme=> ({\r\n   \r\n    container:{\r\n        width:theme.spacing(50),\r\n        padding:'5px 0px',\r\n        margin: '50px auto',\r\n        textAlign:'center',\r\n        borderRadius:'5%',\r\n        boxShadow: `0px 3px 8px rgba(0, 0, 0, 0.24)`,\r\n        color:'white',\r\n      \r\n        '& >*':{\r\n            padding:'5px 0px',\r\n            }\r\n          \r\n        },\r\n        icon:{\r\n            marginLeft:'auto',\r\n            marginRight:'auto',\r\n            backgroundColor:' #8368b2  ',\r\n            borderRadius:'50%',\r\n            boxShadow: `0px 3px 8px rgba(0, 0, 0, 0.3)`,\r\n            height:'95px',\r\n            width:'100px',\r\n        }\r\n\r\n        \r\n     }))\r\n\r\n\r\n\r\nconst WeatherComponent = ({name,main,weather}) => {\r\n\r\n    const classes = usestyles();\r\n\r\n    const { icon,description } = weather[0];\r\n    const { temp,feels_like,temp_min,temp_max } = main;\r\n\r\n    const iconUrl = icon ? `http://openweathermap.org/img/wn/${icon}@2x.png`:'' ;\r\n\r\n    const ImageComponent = () => <Img src={iconUrl} />\r\n\r\n    return (\r\n       \r\n       <div className={classes.container}>\r\n            \r\n                <h1> {name} </h1>\r\n\r\n                <div className={classes.icon}><ImageComponent  /> </div>\r\n                \r\n                                           \r\n                <h1>{Math.floor(temp)}&deg;C</h1>\r\n                <h4>Feels like {Math.floor(feels_like)}&deg;C</h4>\r\n\r\n                <h2>\r\n                    <span style={{paddingRight:'80px'}}><span style={{fontSize:'15px'}}>Min:</span> {Math.floor(temp_min)}&deg;C</span>\r\n                    <span><span style={{fontSize:'15px'}}>Max:</span> {Math.floor(temp_max)}&deg;C</span>\r\n\r\n                </h2>\r\n\r\n                <h2>{description && description[0].toUpperCase() + description.slice(1)}</h2>\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherComponent\r\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport SearchComponent from './SearchComponent';\nimport WeatherComponent from './WeatherComponent';\n\nconst defaultData = {\n  main:{\n    temp:'',\n    feels_like:'',\n    temp_min:'',\n    temp_max:''\n  },\n  weather:[\n    {\n      description:'',\n      icon:'',\n    }\n  ],\n  name:''\n\n} \n\n\nfunction App() {\n\n  const [data,setData] = useState(defaultData);\n  const [search,setSearch] = useState('');\n  const [query,setQuery] = useState('');\n  const [error,setError] = useState(false);\n\n  const APIKEY = 'fa9cdabb16e154ca9fb69c7d9dc9f8e2';\n  \n\n  useEffect(()=>{\n\n    if(query){\n        const getWeather = async () => {\n        console.log('use effect has run');\n        const response = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${query}&appid=${APIKEY}&units=metric`);\n        const responseJson = await response.json();\n        if(response.ok){\n          setData(responseJson);\n          setError(false);\n        }\n        else{\n          setError(true);\n        };\n      }\n      getWeather();\n    }\n  },[query]);\n  \n  \n  const handleTextChange = (e)=>{\n    setSearch(e.target.value);\n  };\n\n  const handleSubmit = (e)=>{\n    e.preventDefault();\n    setQuery((query)=> {\n      return search;\n    });\n    \n  };\n  \n\n\n  const {name,main,weather} = data;\n  \n\n  \n\n  return (\n    <React.Fragment>\n      <h1 style={{fontSize:'50px', color:'white',textAlign:'center'}}>Weather App</h1>\n\n      <SearchComponent error={error} search={search} handleSubmit={handleSubmit} handleTextChange={handleTextChange} />\n\n      {(query && !error) && <WeatherComponent name={name} main={main} weather={weather} />}\n    \n    </React.Fragment>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}